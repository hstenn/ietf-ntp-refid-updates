<?xml version="1.0" encoding="US-ASCII"?>
<!-- This template is for creating an Internet Draft using xml2rfc,
     which is available here: http://xml.resource.org. -->
<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [
	  <!-- One method to get references from the online citation libraries.
	       There has to be one entity for each item to be referenced. 
	       An alternate method (rfc include) is described in the references. -->
	  <!ENTITY RFC5905 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.5905.xml">
	  <!ENTITY RFC2827 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.2827.xml">
	  <!ENTITY RFC2119 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.2119.xml">
	  <!ENTITY RFC2434 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.2434.xml">
	  <!ENTITY RFC3552 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.3552.xml">
	  <!ENTITY I-D.narten-iana-considerations-rfc2434bis SYSTEM "http://xml.resource.org/public/rfc/bibxml3/reference.I-D.narten-iana-considerations-rfc2434bis.xml">
	  ]>
<?xml-stylesheet type='text/xsl' href='rfc2629.xslt' ?>
<!-- used by XSLT processors -->
<!-- For a complete list and description of processing instructions (PIs), 
     please see http://xml.resource.org/authoring/README.html. -->
<!-- Below are generally applicable Processing Instructions (PIs) that most I-Ds might want to use.
     (Here they are set differently than their defaults in xml2rfc v1.32) -->
<?rfc strict="yes" ?>
<!-- give errors regarding ID-nits and DTD validation -->
<!-- control the table of contents (ToC) -->
<?rfc toc="yes"?>
<!-- generate a ToC -->
<?rfc tocdepth="4"?>
<!-- the number of levels of subsections in ToC. default: 3 -->
<!-- control references -->
<?rfc symrefs="yes"?>
<!-- use symbolic references tags, i.e, [RFC2119] instead of [1] -->
<?rfc sortrefs="yes" ?>
<!-- sort the reference entries alphabetically -->
<!-- control vertical white space 
     (using these PIs as follows is recommended by the RFC Editor) -->
<?rfc compact="yes" ?>
<!-- do not start each main section on a new page -->
<?rfc subcompact="no" ?>
<!-- keep one blank line between list items -->
<!-- end of list of popular I-D processing instructions -->
<rfc category="std" docName="draft-ietf-ntp-refid-updates-05" ipr="trust200902">
  <!-- category values: std, bcp, info, exp, and historic
       ipr values: full3667, noModification3667, noDerivatives3667
       you can add the attributes updates="NNNN" and obsoletes="NNNN" 
       they will automatically be output with "(if approved)" -->

  <!-- ***** FRONT MATTER ***** -->

  <front>
    <!-- The abbreviated title is used in the page header - it is only necessary if the 
         full title is longer than 39 characters -->

    <title abbrev="Network Time Protocol REFID Updates">Network Time
      Protocol REFID Updates</title>

    <!-- add 'role="editor"' below for the editors if appropriate -->

    <!-- Another author who claims to be an editor -->

    <author fullname="Harlan Stenn" initials="H." surname="Stenn">
      <organization>Network Time Foundation</organization>

      <address>
        <postal>
          <street>P.O. Box 918</street>

          <!-- Reorder these if your country does things differently -->

          <city>Talent, OR</city>

          <region/>

          <code>97540</code>

          <country>US</country>
        </postal>

        <phone/>

        <email>stenn@nwtime.org</email>

        <!-- uri and facsimile elements may also be added -->
      </address>
    </author>

    <author fullname="Sharon Goldberg" initials="S." surname="Goldberg">
      <organization>Boston University</organization>

      <address>
        <postal>
          <street>111 Cummington St</street>

          <city>Boston, MA</city>

          <region/>

          <code>02215</code>

          <country>US</country>
        </postal>

        <phone/>

        <email>goldbe@cs.bu.edu</email>

      </address>
    </author>

    <!-- other authors -->

    <date year="2019"/>

    <!-- If the month and year are both specified and are the current ones,
         xml2rfc will fill in the current day for you. If only the current
         year is specified, xml2rfc will fill in the current day and month
         for you. If the year is not the current one, it is necessary to
         specify at least a month (xml2rfc assumes day="1" if not specified
         for the purpose of calculating the expiry date).  With drafts it is
         normally sufficient to specify just the year. -->

    <!-- Meta-data Declarations -->

    <area>General</area>

    <workgroup>Internet Engineering Task Force</workgroup>

    <!-- WG name at the upperleft corner of the doc,
         IETF is fine for individual submissions.  
	 If this element is not present, the default is "Network Working
         Group", which is used by the RFC Editor as a nod to the history of
         the IETF. -->

    <keyword>NTP</keyword>

    <!-- Keywords will be incorporated into HTML output
         files in a meta tag but they have no effect on text or nroff
         output. If you submit your draft to the RFC Editor, the
         keywords will be used for the search engine. -->

    <abstract>
      <t>
	<xref target="RFC5905">RFC 5905</xref>, section 7.3, "Packet
	Header Variables", defines the value of the REFID, the system
	peer for the responding host.  In the past, for IPv4
	associations the IPv4 address is used, and for IPv6
	associations the first four octets of the MD5 hash of the IPv6
	are used.  There are two recognized shortcomings to this
	approach, and this proposal addresses them.  One is that
	knowledge of the system peer is "abusable" information and
	should not be generally available.  The second is that the
	four octet hash of the IPv6 address looks very much like an
	IPv4 address, and this is confusing.
      </t>
      
      <t>RFC EDITOR: PLEASE REMOVE THE FOLLOWING PARAGRAPH BEFORE PUBLISHING:</t>
      <t>
	The source code and issues list for this draft can be found in
	https://github.com/hstenn/ietf-ntp-refid-updates
      </t>
    </abstract>
  </front>

  <middle>
    <section title="Introduction">
      <section title="The REFID">
	<t>The interpretation of a REFID is based on the stratum, as
	  documented in <xref target="RFC5905">RFC 5905</xref>, section 7.3,
	  "Packet Header Variables".  The core reason for the REFID in the
	  NTP Protocol is to prevent a degree-one timing loop, where server
	  B decides to follow A as its time source, and A then decides to
	  follow B as its time source.</t>
	
	<t>At Stratum 2+, which will be the case if two servers A and B are
	  exchanging timing information, then if server B follows A as its
	  time source, A's address will be B's REFID.  When A uses IPv4, the
	  default REFID is A's IPv4 address.  When A uses IPv6, the default
	  REFID is a four-octet digest of A's IPv6 address.  Now, if A
	  queries B for its time, then A will learn that B is using A as its
	  time source by observing A's address in the REFID field of the
	  response packet sent by B.  Thus, A will not select B as a
	  potential time source, as this would cause a timing loop.</t>
      </section>

      <section title="NOT-YOU REFID">
	<t>The traditional REFID mechanism, however, also allows a
	  third-party C to learn that A is the time source that is being
	  used by B.  When A is using IPv4, C can learn this by querying B
	  for its time, and observing that the REFID in B's response is the
	  IPv4 address of A.  Meanwhile, when A is using IPv6, then C can
	  again query B for its time, and then can use an offline dictionary
	  attack to attempt to determine the IPv6 address that corresponds
	  to the digest value in the response sent by B.  C could construct
	  the necessary dictionary by compiling a list of publicly
	  accessible IPv6 servers.  Remote attackers can use this technique
	  to attempt to identify the time sources used by a target, and then
	  send spoofed packets to the target or its time source in an
	  attempt to disrupt time service, as was done e.g.,
	  in <xref target="NDSS16"></xref>
	  or <xref target="CVE-2015-8138"></xref>.</t>
	
	<t>The REFID thus unnecessarily leaks information about a
	  target's time server to remote attackers.  The best way to
	  mitigate this vulnerability is to decouple the IP address of the
	  time source from the REFID.  To do this, a system can use an
	  otherwise-impossible value for its REFID, called the NOT-YOU REFID
	  value, when it believes that a querying system is not its time
	  source.</t>

	<t>The NOT-YOU REFID proposal is backwards-compatible and 
	  provides the bare minimum diagnostic information to third
          parties.  It can be implemented by one peer in an NTP 
	  association without any changes to the other peer.  This 
	  holds as long as responding NOT-YOU system can accurately
          detect when it's getting a request from its system peer.</t>

	<t>The NOT-YOU REFID proposal does have a small risk. Consider
	  system A that returns the NOT-YOU REFID and system B that has two
	  network interfaces B1 and B2.  Suppose that system A is using
	  system B as his time source, via network interface B1.  Now
	  suppose that system B queries system A for time via network
	  interface B2.  In this case, system A returns the NOT-YOU REFID
	  value to system B, since system A does not realize that network
	  interface B1 and B2 belong to the same system.  In this case,
	  system B might choose system A as its time source, and a
	  degree-one timing loop will occur.  In this case, however, the two
	  systems will spiral into degrading stratum positions with
	  increasing root distances, and eventually the loop will break.  If
	  any other systems are available as time servers, one of them will
	  become the new system peer.  However, unless or until this happens
	  the two spiraling systems will have degraded time quality.</t>
	 
      </section>

      <section title="IPv6 REFID">
	<t>In an environment where all time queries made to a server can be
	  trusted, an operator might well choose to expose the real
	  REFID.  <xref target="RFC5905">RFC 5905</xref>, section 7.3,
	  "Packet Header Variables", explains how a remote system peer is
	  converted to a REFID.  It says:
	  <list>
	    <t>If using the IPv4 address family, the identifier is the
	      four-octet IPv4 address.  If using the IPv6 family, it is the
	      first four octets of the MD5 hash of the IPv6 address. ...</t>
	  </list>
	  However, the MD5 hash of an IPv6 address often looks like a valid
	  IPv4 address.  When this happens, an operator cannot tell if the
	  REFID refers to an IPv6 address or and IPv4.  Specifically, the
	  NTP Project has received a report where the generated IPv6 hash
	  decoded to the IPv4 address of a different machine on the system
	  peer's network.</t>

	<t>This proposal offers a way for a system to generate a REFID for a
	  IPv6 system peer that does not conflict with an IPv4-based
	  REFID.</t>

	<t>This proposal is not backwards-compatible. It SHOULD be
	  implemented by both peers in an NTP association.  In the scenario
	  where A and B are peering using IPv6, where A is the system peer
	  and does not understand IPv6 REFID, and B is subordinate and is
	  using IPv6 REFID, A will not be able to determine that B is using
	  A as its system peer and a degree-one timing loop can form.</t>

	<t>If both peers implement the IPv6 REFID this situation cannot
	  happen.</t>

	<t>If at least one of the peers implements the
	  proposed <xref target="DRAFT-I-DO">I-DO</xref> protocol this
	  situation cannot happen.</t>
      </section>

      <section title="Requirements Language">
        <t>The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL
          NOT", "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL"
          in this document are to be interpreted as described
          in <xref target="RFC2119">RFC 2119</xref>.</t>
      </section>
    </section>

    <section title="The NOT-YOU REFID">
      <section title="Proposal">
	<t>When enabled, this proposal allows the one-degree loop detection
	  to work and useful diagnostic information to be provided to
	  trusted partners while keeping potentially abusable information
	  from being disclosed to ostensibly uninterested parties.  It does
	  this by returning the normal REFID to queries that come from
	  trusted addresses or from an address that the current system
	  believes is its time source (aka its "system peer"), and otherwise
	  returning one of two special IP addresses that is interpreted to
	  mean "not you".  The "not you" IP addresses are 127.127.127.127
	  and 127.127.127.128.  If an IPv6 query is received from an address
	  whose four-octet hash equals one of these two addresses and we
	  believe the querying host is not our system peer, the other
	  NOT-YOU address is returned as the REFID.</t>

	<t>This mechanism is correct and transparent when the system
	  responding with a NOT-YOU can accurately detect when it's getting
	  a timing query from its system peer.  A querying system that uses
	  IPv4 continues to check that its IPv4 address does not appear in
	  the REFID before deciding whether to take time from the current
	  system.  A querying system that uses IPv6 continues to check that
	  the four-octet hash of its IPv6 address does not appear in the
	  REFID before deciding whether to take time from the current
	  system.  </t>

	<!-- SHARON: I commented this out because it repeats what is already in section 1
	<t>Use of the NOT-YOU REFID proposal will hide the current system's
	  system peer from querying systems that the current system believes
	  are not the current system's system peer.  Should the current
	  system return the "not you" REFID to a query from its system peer,
	  for example in the case where the system peer sends its query from
	  an unexpected IP address, a one-degree timing loop can occur.
	  Put another way, the responding system has imperfect knowledge
	  about whether or not the sender is its system peer and there are
	  cases where it will offer a NOT-YOU response to its system peer,
	  which can then produce a degree-one timing loop.</t>

        <t>Note that this mechanism fully supports degree-one loop detection
          in the case where the responding NOT-YOU system can accurately
          detect when it's getting a request from its system peer, and
          otherwise provides the most basic diagnostic information to third
          parties.</t>-->
      </section>
    </section>

    <section title="Augmenting the IPv6 REFID Hash">
      <section title="Background">
	<t>In a trusted network, the S2+ REFID is generated based on the
	  network system peer.  <xref target="RFC5905">RFC 5905</xref>
	  says:</t>

        <t><list><t>If using the IPv4 address family, the identifier is the
	      four-octet IPv4 address.  If using the IPv6 family, it is the
	      first four octets of the MD5 hash of the IPv6 address.
	</t></list></t>

	<t>This means that the IPv4 representation of the IPv6 hash would
	  be: b1.b2.b3.b4 .  This proposal is that the system MAY also use
	  255.b2.b3.b4 as its REFID.  This reduces the risk of ambiguity,
	  since addresses beginning with 255 are "reserved", and thus will
	  not collide with valid IPv4 on the network.</t>

	<t>When using the REFID to check for a timing loop for an IPv6
	  association, if the code that checks the first four-octets of the
	  hash fails to match then the code must check again, using 0xFF as
	  the first octet of the hash.</t>
      </section>

      <section title="Potential Problems" anchor="ipv6problems">

	<t>There is a 1 in 16,777,216 chance that the REFID hashes of two
	  IPv6 addresses will be identical, producing a false-positive loop
	  detection.  With a sufficient number of servers, the risk of this
	  problem becomes a non-issue.  The use of the NOT-YOU REFID and/or
	  the
	  proposed <xref target="DRAFT-REFID-SUGGESTION">REFID-SUGGESTION</xref>
	  or <xref target="DRAFT-I-DO">I-DO</xref> extension fields are ways
	  to mitigate this potential situation.</t>

	<t>Unrealistically, if only two instances of NTP are communicating
	  via IPv6 and system A implements this new IPv6 REFID hash and
	  system B does not, system B will not be able to detect this loop
	  condition.  In this case, the two machines will slowly increase
	  their stratum until they become unsynchronized.  This situation is
	  considered to be unrealistic because, for this to happen, each
	  system would have to have only the other system available as a
	  time source, for example, in a misconfigured "orphan mode" setup.
	  There is no risk of this happening in an NTP network with 3 or
	  more time sources, or in a properly-configured "time island"
	  setup.
	  <!-- (SHARON: Is this true?  I thought stratum is not used to
	       choose sys peer anymore?)  (HMS: I believe so, as orphan mode
	       systems operate from a fixed stratum, and otherwise root distance
	       increases.) -->
	</t>
      </section>

    </section>

    <section anchor="Acknowledgements" title="Acknowledgements">
      <t>For the "not-you" REFID, we acknowledge useful discussions 
	with Aanchal Malhotra and Matthew Van Gundy.</t>

      <t>For the IPv6 REFID, we acknowledge Dan Mahoney (and perhaps others)
	for suggesting the idea of using an "impossible" first-octet value
	to indicate an IPv6 refid hash.</t>
    </section>

    <!-- Possibly a 'Contributors' section ... -->

    <section anchor="IANA" title="IANA Considerations">
      <t>This memo requests IANA to allocate a pseudo Extension Field Type
	of 0xFFFF so the proposed "I-Do" exchange can report whether or not
	the "IPv6 REFID Hash" is supported.</t>
    </section>

    <section anchor="Security" title="Security Considerations">
      <t>Many systems running NTP are configured to return responses to
	timing queries by default. These responses contain a REFID field,
	which generally reveals the address of the system's time source if
	that source is an IPv4 address.  This behavior can be exploited by
	remote attackers who wish to first learn the address of a target's
	time source, and then attack the target and/or its time source.  As
	such, the NOT-YOU REFID proposal is designed to harden NTP against
	these attacks by limiting the amount of information leaked in the
	REFID field.  </t>

      <t>Systems running NTP should reveal the identity of their system in
	peer in their REFID only when they are on a trusted network.  The
	IPv6 REFID proposal provides one way to do this, when the system
	peer uses addresses in the IPv6 family.
      </t>
    </section>
  </middle>

  <!--  *****BACK MATTER ***** -->

  <back>
    <!-- References split into informative and normative -->

    <!-- There are 2 ways to insert reference entries from the citation libraries:
	 1. define an ENTITY at the top, and use "ampersand character"RFC2629; here (as shown)
	 2. simply use a PI "less than character"?rfc include="reference.RFC.2119.xml"?> here
         (for I-Ds: include="reference.I-D.narten-iana-considerations-rfc2434bis.xml")

	 Both are cited textually in the same manner: by using xref elements.
	 If you use the PI option, xml2rfc will, by default, try to find included files in the same
	 directory as the including file. You can also define the XML_LIBRARY environment variable
	 with a value containing a set of directories to search.  These can be either in the local
	 filing system or remote ones accessed by http (http://domain/dir/... ).-->

    <references title="Normative References">
      <!--?rfc include="http://xml.resource.org/public/rfc/bibxml/reference.RFC.2119.xml"?-->

      &RFC2119;

      <!--?rfc include="http://xml.resource.org/public/rfc/bibxml/reference.RFC.5905.xml"?-->

      &RFC5905;

    </references>

    <!-- Here we use entities that we defined at the beginning. -->

    <references title="Informative References">
      <!-- &RFC3552;

	   &I-D.narten-iana-considerations-rfc2434bis; -->

      <reference anchor="NTP-EXTENSION-FIELD">
	<front>
	  <title>draft-stenn-ntp-extension-fields</title>
	  <author initials="H." surname="Stenn"><organization /></author>
	  <date year="2018" />
	</front>
      </reference>

      <reference anchor="DRAFT-REFID-SUGGESTION">
	<front>
	  <title>draft-stenn-ntp-suggest-refid</title>
	  <author initials="H." surname="Stenn"><organization /></author>
	  <date year="2018" />
	</front>
      </reference>

      <reference anchor="DRAFT-I-DO">
	<front>
	  <title>draft-stenn-ntp-i-do</title>
	  <author initials="H." surname="Stenn"><organization /></author>
	  <date year="2018" />
	</front>
      </reference>

      <reference anchor="NDSS16">
	<front>
          <title>Attacking the Network Time Protocol</title> 
          <author initials="A." surname="Malhotra"><organization /></author>
          <author initials="I." surname="Cohen"><organization /></author>
          <author initials="E." surname="Brakke"><organization /></author>
          <author initials="S." surname="Goldberg"><organization /></author>
          <date year="2016" />
	</front>
	<seriesInfo name="in" value="ISOC Network and Distributed System Security Symposium 2016 (NDSS'16)" />
      </reference>

      <reference anchor="CVE-2015-8138">
	<front>
          <title>Network Time Protocol Origin Timestamp Check Impersonation Vulnerability (CVE-2015-8138)</title> 
          <author initials="M." surname="Van Gundy"><organization /></author>
          <author initials="J." surname="Gardner"><organization /></author>
          <date year="2016" />
	</front>
	<seriesInfo name="in" value="TALOS VULNERABILITY REPORT (TALOS-2016-0077)" /> 
      </reference>
      
    </references> 

    <!--
	<section anchor="app-additional" title="Additional Stuff">
	  <t>This becomes an Appendix.</t>
	</section>
	-->

    <!-- Change Log

	 2016-10-23  HMS Initial version
	 2016-10-27  SG Updates
	 2016-10-29  HMS Updates
	 v00
      -->
  </back>
</rfc>
